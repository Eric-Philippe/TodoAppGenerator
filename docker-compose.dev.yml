# Configuration Docker Compose pour le développement
# Utilise des volumes pour le hot-reload et des ports exposés pour le debug

services:
  # Base de données PostgreSQL
  postgres-intern:
    image: postgres:16-alpine
    container_name: todo-postgres-intern-dev
    environment:
      POSTGRES_DB: todoapp_generator_intern
      POSTGRES_USER: todouser
      POSTGRES_PASSWORD: todopassword
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    volumes:
      - postgres_intern_dev_data:/var/lib/postgresql/data
      - ./database/intern/init:/docker-entrypoint-initdb.d
    ports:
      - "5434:5432"
    networks:
      - todo-network-dev

  # Base de données PostgreSQL
  postgres-user:
    image: postgres:16-alpine
    container_name: todo-postgres-user-dev
    environment:
      POSTGRES_DB: todoapp_generator_user
      POSTGRES_USER: todouser
      POSTGRES_PASSWORD: todopassword
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    volumes:
      - postgres_user_dev_data:/var/lib/postgresql/data
      - ./database/user/init:/docker-entrypoint-initdb.d
    ports:
      - "5433:5432"
    networks:
      - todo-network-dev

  # Base de données PostgreSQL
  postgres-config:
    image: postgres:16-alpine
    container_name: todo-postgres-config-dev
    environment:
      POSTGRES_DB: todoapp_generator_config
      POSTGRES_USER: todouser
      POSTGRES_PASSWORD: todopassword
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    volumes:
      - postgres_config_dev_data:/var/lib/postgresql/data
      - ./database/config/init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - todo-network-dev

  # PgAdmin (mode développement)
  pgadmin-dev:
    image: dpage/pgadmin4:latest
    container_name: todo-pgadmin-dev
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@todoapp.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "8080:80"
    networks:
      - todo-network-dev

  # Redis (mode développement)
  redis-dev:
    image: redis:7-alpine
    container_name: todo-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - todo-network-dev
    restart: unless-stopped

  # API Gateway (mode développement)
  api-gateway-dev:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile.dev
    container_name: todo-api-gateway-dev
    environment:
      PORT: 5000
      NODE_ENV: development
      PUBLIC_API_URL: http://public-api-dev:5050
      PRIVATE_API_URL: http://private-api-dev:5555
    volumes:
      - ./api-gateway:/app
      - /app/node_modules
    ports:
      - "5000:5000"
      - "9229:9229" # Port de debug Node.js
    depends_on:
      - postgres-intern
      - postgres-user
      - postgres-config
    networks:
      - todo-network-dev

  # API Publique (mode développement)
  public-api-dev:
    build:
      context: ./public-api
      dockerfile: Dockerfile.dev
    container_name: todo-public-api-dev
    environment:
      PORT: 5050
      NODE_ENV: development
      DB_HOST: postgres-config
      DB_PORT: 5432
      DB_USER: todouser
      DB_PASSWORD: todopassword
      DB_NAME: todoapp_generator_config
      DATABASE_URL: postgresql://todouser:todopassword@postgres-config:5432/todoapp_generator_config?schema=public
      SERVER_ADDRESS: http://localhost:5050
    volumes:
      - ./public-api:/app
      - /app/node_modules
    ports:
      - "5050:5050"
      - "9230:9229" # Port de debug Node.js
    depends_on:
      - postgres-user
      - postgres-config
    networks:
      - todo-network-dev

  # API Privée (mode développement)
  private-api-dev:
    build:
      context: ./private-api
      dockerfile: Dockerfile.dev
    container_name: todo-private-api-dev
    environment:
      API_PORT: 5555
      ENV: development
      POSTGRES_HOST: postgres-user
      POSTGRES_PORT: 5432
      POSTGRES_USER: todouser
      POSTGRES_PASSWORD: todopassword
      POSTGRES_DB: todoapp_generator_user
      CACHE_HOST: redis-dev
      CACHE_PORT: 6379
      CACHE_PASSWORD: ""
      CACHE_DB: 0
      JWT_SECRET: your-development-jwt-secret
      CLIENT_URL: http://localhost:3000
      ALLOWED_ORIGINS: "http://localhost:3000,http://localhost:5173"
    volumes:
      - ./private-api:/app
      - go_modules_cache:/go/pkg/mod
    ports:
      - "5555:5555"
    depends_on:
      - postgres-intern
      - postgres-config
      - postgres-user
      - redis-dev
    networks:
      - todo-network-dev

  # Frontend (mode développement)
  frontend-dev:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: todo-frontend-dev
    environment:
      - VITE_API_URL=http://localhost:5000
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:5173" # Port Vite par défaut
    depends_on:
      - api-gateway-dev
    networks:
      - todo-network-dev
    command: npm run dev -- --host 0.0.0.0

volumes:
  postgres_intern_dev_data:
    driver: local
  postgres_user_dev_data:
    driver: local
  postgres_config_dev_data:
    driver: local
  pgadmin_dev_data:
    driver: local
  redis_dev_data:
    driver: local
  go_modules_cache:
    driver: local

networks:
  todo-network-dev:
    driver: bridge
